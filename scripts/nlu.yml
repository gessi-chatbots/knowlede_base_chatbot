version: '3.0' 

nlu:
- intent: greet
  examples: |
    - hey
    - hello
    - hi
    - hello there
    - good morning
    - good evening
    - moin
    - hey there
    - let's go
    - hey dude
    - goodmorning
    - goodevening
    - good afternoon

- intent: find_feature
  examples: |
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [offline navigation]{"entity": "features", "value": "offline navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [bookmarks]{"entity": "features", "value": "bookmarks"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [no tracking]{"entity": "features", "value": "no tracking"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [works offline]{"entity": "features", "value": "works offline"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [lightweight]{"entity": "features", "value": "lightweight"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [customizable]{"entity": "features", "value": "customizable"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [walking navigation]{"entity": "features", "value": "walking navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [driving directions]{"entity": "features", "value": "driving directions"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [calendar]{"entity": "features", "value": "calendar"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [real time traffic]{"entity": "features", "value": "real time traffic"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [track gps location]{"entity": "features", "value": "track gps location"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [events]{"entity": "features", "value": "events"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [support for webdav]{"entity": "features", "value": "support for webdav"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [record tracks]{"entity": "features", "value": "record tracks"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [route optimization]{"entity": "features", "value": "route optimization"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [open source projects]{"entity": "features", "value": "open source projects"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [map viewer]{"entity": "features", "value": "map viewer"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [text to speech]{"entity": "features", "value": "text to speech"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [nearby search]{"entity": "features", "value": "nearby search"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [calendar events]{"entity": "features", "value": "calendar events"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [notifications]{"entity": "features", "value": "notifications"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [osm based]{"entity": "features", "value": "osm based"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [cycling]{"entity": "features", "value": "cycling"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [hiking maps]{"entity": "features", "value": "hiking maps"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [user generated]{"entity": "features", "value": "user generated"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [route planning]{"entity": "features", "value": "route planning"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [mapping]{"entity": "features", "value": "mapping"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [reminder]{"entity": "features", "value": "reminder"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [voice navigation]{"entity": "features", "value": "voice navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [gps navigation]{"entity": "features", "value": "gps navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [offline routing]{"entity": "features", "value": "offline routing"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [route navigation]{"entity": "features", "value": "route navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [location based]{"entity": "features", "value": "location based"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [hiking]{"entity": "features", "value": "hiking"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [built in calendar]{"entity": "features", "value": "built in calendar"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [biking maps]{"entity": "features", "value": "biking maps"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [find parking]{"entity": "features", "value": "find parking"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [public transportation]{"entity": "features", "value": "public transportation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [event calendar]{"entity": "features", "value": "event calendar"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [maps navigation]{"entity": "features", "value": "maps navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [map]{"entity": "features", "value": "map"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [offline search]{"entity": "features", "value": "offline search"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [ad free]{"entity": "features", "value": "ad free"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [privacy focused]{"entity": "features", "value": "privacy focused"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [bike]{"entity": "features", "value": "bike"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [share location]{"entity": "features", "value": "share location"}
    - Ask [app]{"entity": "object_type", "value": "apps"} to activate [material design]{"entity": "features", "value": "material design"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [offline navigation]{"entity": "features", "value": "offline navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [bookmarks]{"entity": "features", "value": "bookmarks"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [no tracking]{"entity": "features", "value": "no tracking"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [works offline]{"entity": "features", "value": "works offline"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [lightweight]{"entity": "features", "value": "lightweight"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [customizable]{"entity": "features", "value": "customizable"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [walking navigation]{"entity": "features", "value": "walking navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [driving directions]{"entity": "features", "value": "driving directions"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [calendar]{"entity": "features", "value": "calendar"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [real time traffic]{"entity": "features", "value": "real time traffic"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [track gps location]{"entity": "features", "value": "track gps location"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [events]{"entity": "features", "value": "events"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [support for webdav]{"entity": "features", "value": "support for webdav"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [record tracks]{"entity": "features", "value": "record tracks"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [route optimization]{"entity": "features", "value": "route optimization"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [open source projects]{"entity": "features", "value": "open source projects"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [map viewer]{"entity": "features", "value": "map viewer"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [text to speech]{"entity": "features", "value": "text to speech"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [nearby search]{"entity": "features", "value": "nearby search"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [calendar events]{"entity": "features", "value": "calendar events"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [notifications]{"entity": "features", "value": "notifications"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [osm based]{"entity": "features", "value": "osm based"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [cycling]{"entity": "features", "value": "cycling"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [hiking maps]{"entity": "features", "value": "hiking maps"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [user generated]{"entity": "features", "value": "user generated"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [route planning]{"entity": "features", "value": "route planning"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [mapping]{"entity": "features", "value": "mapping"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [reminder]{"entity": "features", "value": "reminder"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [voice navigation]{"entity": "features", "value": "voice navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [gps navigation]{"entity": "features", "value": "gps navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [offline routing]{"entity": "features", "value": "offline routing"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [route navigation]{"entity": "features", "value": "route navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [location based]{"entity": "features", "value": "location based"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [hiking]{"entity": "features", "value": "hiking"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [built in calendar]{"entity": "features", "value": "built in calendar"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [biking maps]{"entity": "features", "value": "biking maps"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [find parking]{"entity": "features", "value": "find parking"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [public transportation]{"entity": "features", "value": "public transportation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [event calendar]{"entity": "features", "value": "event calendar"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [maps navigation]{"entity": "features", "value": "maps navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [map]{"entity": "features", "value": "map"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [offline search]{"entity": "features", "value": "offline search"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [ad free]{"entity": "features", "value": "ad free"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [privacy focused]{"entity": "features", "value": "privacy focused"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [bike]{"entity": "features", "value": "bike"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [share location]{"entity": "features", "value": "share location"}
    - I want [app]{"entity": "object_type", "value": "apps"} to enable [material design]{"entity": "features", "value": "material design"}
    - enable [apps](object_type) [offline navigation]{"entity": "features", "value": "offline navigation"}
    - enable [apps](object_type) [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - enable [apps](object_type) [bookmarks]{"entity": "features", "value": "bookmarks"}
    - enable [apps](object_type) [no tracking]{"entity": "features", "value": "no tracking"}
    - enable [apps](object_type) [works offline]{"entity": "features", "value": "works offline"}
    - enable [apps](object_type) [lightweight]{"entity": "features", "value": "lightweight"}
    - enable [apps](object_type) [customizable]{"entity": "features", "value": "customizable"}
    - enable [apps](object_type) [walking navigation]{"entity": "features", "value": "walking navigation"}
    - enable [apps](object_type) [driving directions]{"entity": "features", "value": "driving directions"}
    - enable [apps](object_type) [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - enable [apps](object_type) [calendar]{"entity": "features", "value": "calendar"}
    - enable [apps](object_type) [real time traffic]{"entity": "features", "value": "real time traffic"}
    - enable [apps](object_type) [track gps location]{"entity": "features", "value": "track gps location"}
    - enable [apps](object_type) [events]{"entity": "features", "value": "events"}
    - enable [apps](object_type) [support for webdav]{"entity": "features", "value": "support for webdav"}
    - enable [apps](object_type) [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - enable [apps](object_type) [record tracks]{"entity": "features", "value": "record tracks"}
    - enable [apps](object_type) [route optimization]{"entity": "features", "value": "route optimization"}
    - enable [apps](object_type) [open source projects]{"entity": "features", "value": "open source projects"}
    - enable [apps](object_type) [map viewer]{"entity": "features", "value": "map viewer"}
    - enable [apps](object_type) [text to speech]{"entity": "features", "value": "text to speech"}
    - enable [apps](object_type) [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - enable [apps](object_type) [nearby search]{"entity": "features", "value": "nearby search"}
    - enable [apps](object_type) [calendar events]{"entity": "features", "value": "calendar events"}
    - enable [apps](object_type) [notifications]{"entity": "features", "value": "notifications"}
    - enable [apps](object_type) [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - enable [apps](object_type) [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - enable [apps](object_type) [osm based]{"entity": "features", "value": "osm based"}
    - enable [apps](object_type) [cycling]{"entity": "features", "value": "cycling"}
    - enable [apps](object_type) [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - enable [apps](object_type) [hiking maps]{"entity": "features", "value": "hiking maps"}
    - enable [apps](object_type) [user generated]{"entity": "features", "value": "user generated"}
    - enable [apps](object_type) [route planning]{"entity": "features", "value": "route planning"}
    - enable [apps](object_type) [mapping]{"entity": "features", "value": "mapping"}
    - enable [apps](object_type) [reminder]{"entity": "features", "value": "reminder"}
    - enable [apps](object_type) [voice navigation]{"entity": "features", "value": "voice navigation"}
    - enable [apps](object_type) [gps navigation]{"entity": "features", "value": "gps navigation"}
    - enable [apps](object_type) [offline routing]{"entity": "features", "value": "offline routing"}
    - enable [apps](object_type) [route navigation]{"entity": "features", "value": "route navigation"}
    - enable [apps](object_type) [location based]{"entity": "features", "value": "location based"}
    - enable [apps](object_type) [hiking]{"entity": "features", "value": "hiking"}
    - enable [apps](object_type) [built in calendar]{"entity": "features", "value": "built in calendar"}
    - enable [apps](object_type) [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - enable [apps](object_type) [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - enable [apps](object_type) [biking maps]{"entity": "features", "value": "biking maps"}
    - enable [apps](object_type) [find parking]{"entity": "features", "value": "find parking"}
    - enable [apps](object_type) [public transportation]{"entity": "features", "value": "public transportation"}
    - enable [apps](object_type) [event calendar]{"entity": "features", "value": "event calendar"}
    - enable [apps](object_type) [maps navigation]{"entity": "features", "value": "maps navigation"}
    - enable [apps](object_type) [map]{"entity": "features", "value": "map"}
    - enable [apps](object_type) [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - enable [apps](object_type) [offline search]{"entity": "features", "value": "offline search"}
    - enable [apps](object_type) [ad free]{"entity": "features", "value": "ad free"}
    - enable [apps](object_type) [privacy focused]{"entity": "features", "value": "privacy focused"}
    - enable [apps](object_type) [bike]{"entity": "features", "value": "bike"}
    - enable [apps](object_type) [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - enable [apps](object_type) [share location]{"entity": "features", "value": "share location"}
    - enable [apps](object_type) [material design]{"entity": "features", "value": "material design"}
    - activate [apps](object_type) [offline navigation]{"entity": "features", "value": "offline navigation"}
    - activate [apps](object_type) [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - activate [apps](object_type) [bookmarks]{"entity": "features", "value": "bookmarks"}
    - activate [apps](object_type) [no tracking]{"entity": "features", "value": "no tracking"}
    - activate [apps](object_type) [works offline]{"entity": "features", "value": "works offline"}
    - activate [apps](object_type) [lightweight]{"entity": "features", "value": "lightweight"}
    - activate [apps](object_type) [customizable]{"entity": "features", "value": "customizable"}
    - activate [apps](object_type) [walking navigation]{"entity": "features", "value": "walking navigation"}
    - activate [apps](object_type) [driving directions]{"entity": "features", "value": "driving directions"}
    - activate [apps](object_type) [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - activate [apps](object_type) [calendar]{"entity": "features", "value": "calendar"}
    - activate [apps](object_type) [real time traffic]{"entity": "features", "value": "real time traffic"}
    - activate [apps](object_type) [track gps location]{"entity": "features", "value": "track gps location"}
    - activate [apps](object_type) [events]{"entity": "features", "value": "events"}
    - activate [apps](object_type) [support for webdav]{"entity": "features", "value": "support for webdav"}
    - activate [apps](object_type) [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - activate [apps](object_type) [record tracks]{"entity": "features", "value": "record tracks"}
    - activate [apps](object_type) [route optimization]{"entity": "features", "value": "route optimization"}
    - activate [apps](object_type) [open source projects]{"entity": "features", "value": "open source projects"}
    - activate [apps](object_type) [map viewer]{"entity": "features", "value": "map viewer"}
    - activate [apps](object_type) [text to speech]{"entity": "features", "value": "text to speech"}
    - activate [apps](object_type) [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - activate [apps](object_type) [nearby search]{"entity": "features", "value": "nearby search"}
    - activate [apps](object_type) [calendar events]{"entity": "features", "value": "calendar events"}
    - activate [apps](object_type) [notifications]{"entity": "features", "value": "notifications"}
    - activate [apps](object_type) [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - activate [apps](object_type) [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - activate [apps](object_type) [osm based]{"entity": "features", "value": "osm based"}
    - activate [apps](object_type) [cycling]{"entity": "features", "value": "cycling"}
    - activate [apps](object_type) [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - activate [apps](object_type) [hiking maps]{"entity": "features", "value": "hiking maps"}
    - activate [apps](object_type) [user generated]{"entity": "features", "value": "user generated"}
    - activate [apps](object_type) [route planning]{"entity": "features", "value": "route planning"}
    - activate [apps](object_type) [mapping]{"entity": "features", "value": "mapping"}
    - activate [apps](object_type) [reminder]{"entity": "features", "value": "reminder"}
    - activate [apps](object_type) [voice navigation]{"entity": "features", "value": "voice navigation"}
    - activate [apps](object_type) [gps navigation]{"entity": "features", "value": "gps navigation"}
    - activate [apps](object_type) [offline routing]{"entity": "features", "value": "offline routing"}
    - activate [apps](object_type) [route navigation]{"entity": "features", "value": "route navigation"}
    - activate [apps](object_type) [location based]{"entity": "features", "value": "location based"}
    - activate [apps](object_type) [hiking]{"entity": "features", "value": "hiking"}
    - activate [apps](object_type) [built in calendar]{"entity": "features", "value": "built in calendar"}
    - activate [apps](object_type) [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - activate [apps](object_type) [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - activate [apps](object_type) [biking maps]{"entity": "features", "value": "biking maps"}
    - activate [apps](object_type) [find parking]{"entity": "features", "value": "find parking"}
    - activate [apps](object_type) [public transportation]{"entity": "features", "value": "public transportation"}
    - activate [apps](object_type) [event calendar]{"entity": "features", "value": "event calendar"}
    - activate [apps](object_type) [maps navigation]{"entity": "features", "value": "maps navigation"}
    - activate [apps](object_type) [map]{"entity": "features", "value": "map"}
    - activate [apps](object_type) [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - activate [apps](object_type) [offline search]{"entity": "features", "value": "offline search"}
    - activate [apps](object_type) [ad free]{"entity": "features", "value": "ad free"}
    - activate [apps](object_type) [privacy focused]{"entity": "features", "value": "privacy focused"}
    - activate [apps](object_type) [bike]{"entity": "features", "value": "bike"}
    - activate [apps](object_type) [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - activate [apps](object_type) [share location]{"entity": "features", "value": "share location"}
    - activate [apps](object_type) [material design]{"entity": "features", "value": "material design"}
    - turn on [apps](object_type) [offline navigation]{"entity": "features", "value": "offline navigation"}
    - turn on [apps](object_type) [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - turn on [apps](object_type) [bookmarks]{"entity": "features", "value": "bookmarks"}
    - turn on [apps](object_type) [no tracking]{"entity": "features", "value": "no tracking"}
    - turn on [apps](object_type) [works offline]{"entity": "features", "value": "works offline"}
    - turn on [apps](object_type) [lightweight]{"entity": "features", "value": "lightweight"}
    - turn on [apps](object_type) [customizable]{"entity": "features", "value": "customizable"}
    - turn on [apps](object_type) [walking navigation]{"entity": "features", "value": "walking navigation"}
    - turn on [apps](object_type) [driving directions]{"entity": "features", "value": "driving directions"}
    - turn on [apps](object_type) [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - turn on [apps](object_type) [calendar]{"entity": "features", "value": "calendar"}
    - turn on [apps](object_type) [real time traffic]{"entity": "features", "value": "real time traffic"}
    - turn on [apps](object_type) [track gps location]{"entity": "features", "value": "track gps location"}
    - turn on [apps](object_type) [events]{"entity": "features", "value": "events"}
    - turn on [apps](object_type) [support for webdav]{"entity": "features", "value": "support for webdav"}
    - turn on [apps](object_type) [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - turn on [apps](object_type) [record tracks]{"entity": "features", "value": "record tracks"}
    - turn on [apps](object_type) [route optimization]{"entity": "features", "value": "route optimization"}
    - turn on [apps](object_type) [open source projects]{"entity": "features", "value": "open source projects"}
    - turn on [apps](object_type) [map viewer]{"entity": "features", "value": "map viewer"}
    - turn on [apps](object_type) [text to speech]{"entity": "features", "value": "text to speech"}
    - turn on [apps](object_type) [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - turn on [apps](object_type) [nearby search]{"entity": "features", "value": "nearby search"}
    - turn on [apps](object_type) [calendar events]{"entity": "features", "value": "calendar events"}
    - turn on [apps](object_type) [notifications]{"entity": "features", "value": "notifications"}
    - turn on [apps](object_type) [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - turn on [apps](object_type) [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - turn on [apps](object_type) [osm based]{"entity": "features", "value": "osm based"}
    - turn on [apps](object_type) [cycling]{"entity": "features", "value": "cycling"}
    - turn on [apps](object_type) [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - turn on [apps](object_type) [hiking maps]{"entity": "features", "value": "hiking maps"}
    - turn on [apps](object_type) [user generated]{"entity": "features", "value": "user generated"}
    - turn on [apps](object_type) [route planning]{"entity": "features", "value": "route planning"}
    - turn on [apps](object_type) [mapping]{"entity": "features", "value": "mapping"}
    - turn on [apps](object_type) [reminder]{"entity": "features", "value": "reminder"}
    - turn on [apps](object_type) [voice navigation]{"entity": "features", "value": "voice navigation"}
    - turn on [apps](object_type) [gps navigation]{"entity": "features", "value": "gps navigation"}
    - turn on [apps](object_type) [offline routing]{"entity": "features", "value": "offline routing"}
    - turn on [apps](object_type) [route navigation]{"entity": "features", "value": "route navigation"}
    - turn on [apps](object_type) [location based]{"entity": "features", "value": "location based"}
    - turn on [apps](object_type) [hiking]{"entity": "features", "value": "hiking"}
    - turn on [apps](object_type) [built in calendar]{"entity": "features", "value": "built in calendar"}
    - turn on [apps](object_type) [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - turn on [apps](object_type) [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - turn on [apps](object_type) [biking maps]{"entity": "features", "value": "biking maps"}
    - turn on [apps](object_type) [find parking]{"entity": "features", "value": "find parking"}
    - turn on [apps](object_type) [public transportation]{"entity": "features", "value": "public transportation"}
    - turn on [apps](object_type) [event calendar]{"entity": "features", "value": "event calendar"}
    - turn on [apps](object_type) [maps navigation]{"entity": "features", "value": "maps navigation"}
    - turn on [apps](object_type) [map]{"entity": "features", "value": "map"}
    - turn on [apps](object_type) [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - turn on [apps](object_type) [offline search]{"entity": "features", "value": "offline search"}
    - turn on [apps](object_type) [ad free]{"entity": "features", "value": "ad free"}
    - turn on [apps](object_type) [privacy focused]{"entity": "features", "value": "privacy focused"}
    - turn on [apps](object_type) [bike]{"entity": "features", "value": "bike"}
    - turn on [apps](object_type) [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - turn on [apps](object_type) [share location]{"entity": "features", "value": "share location"}
    - turn on [apps](object_type) [material design]{"entity": "features", "value": "material design"}
    - authorize [apps](object_type) [offline navigation]{"entity": "features", "value": "offline navigation"}
    - authorize [apps](object_type) [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - authorize [apps](object_type) [bookmarks]{"entity": "features", "value": "bookmarks"}
    - authorize [apps](object_type) [no tracking]{"entity": "features", "value": "no tracking"}
    - authorize [apps](object_type) [works offline]{"entity": "features", "value": "works offline"}
    - authorize [apps](object_type) [lightweight]{"entity": "features", "value": "lightweight"}
    - authorize [apps](object_type) [customizable]{"entity": "features", "value": "customizable"}
    - authorize [apps](object_type) [walking navigation]{"entity": "features", "value": "walking navigation"}
    - authorize [apps](object_type) [driving directions]{"entity": "features", "value": "driving directions"}
    - authorize [apps](object_type) [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - authorize [apps](object_type) [calendar]{"entity": "features", "value": "calendar"}
    - authorize [apps](object_type) [real time traffic]{"entity": "features", "value": "real time traffic"}
    - authorize [apps](object_type) [track gps location]{"entity": "features", "value": "track gps location"}
    - authorize [apps](object_type) [events]{"entity": "features", "value": "events"}
    - authorize [apps](object_type) [support for webdav]{"entity": "features", "value": "support for webdav"}
    - authorize [apps](object_type) [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - authorize [apps](object_type) [record tracks]{"entity": "features", "value": "record tracks"}
    - authorize [apps](object_type) [route optimization]{"entity": "features", "value": "route optimization"}
    - authorize [apps](object_type) [open source projects]{"entity": "features", "value": "open source projects"}
    - authorize [apps](object_type) [map viewer]{"entity": "features", "value": "map viewer"}
    - authorize [apps](object_type) [text to speech]{"entity": "features", "value": "text to speech"}
    - authorize [apps](object_type) [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - authorize [apps](object_type) [nearby search]{"entity": "features", "value": "nearby search"}
    - authorize [apps](object_type) [calendar events]{"entity": "features", "value": "calendar events"}
    - authorize [apps](object_type) [notifications]{"entity": "features", "value": "notifications"}
    - authorize [apps](object_type) [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - authorize [apps](object_type) [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - authorize [apps](object_type) [osm based]{"entity": "features", "value": "osm based"}
    - authorize [apps](object_type) [cycling]{"entity": "features", "value": "cycling"}
    - authorize [apps](object_type) [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - authorize [apps](object_type) [hiking maps]{"entity": "features", "value": "hiking maps"}
    - authorize [apps](object_type) [user generated]{"entity": "features", "value": "user generated"}
    - authorize [apps](object_type) [route planning]{"entity": "features", "value": "route planning"}
    - authorize [apps](object_type) [mapping]{"entity": "features", "value": "mapping"}
    - authorize [apps](object_type) [reminder]{"entity": "features", "value": "reminder"}
    - authorize [apps](object_type) [voice navigation]{"entity": "features", "value": "voice navigation"}
    - authorize [apps](object_type) [gps navigation]{"entity": "features", "value": "gps navigation"}
    - authorize [apps](object_type) [offline routing]{"entity": "features", "value": "offline routing"}
    - authorize [apps](object_type) [route navigation]{"entity": "features", "value": "route navigation"}
    - authorize [apps](object_type) [location based]{"entity": "features", "value": "location based"}
    - authorize [apps](object_type) [hiking]{"entity": "features", "value": "hiking"}
    - authorize [apps](object_type) [built in calendar]{"entity": "features", "value": "built in calendar"}
    - authorize [apps](object_type) [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - authorize [apps](object_type) [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - authorize [apps](object_type) [biking maps]{"entity": "features", "value": "biking maps"}
    - authorize [apps](object_type) [find parking]{"entity": "features", "value": "find parking"}
    - authorize [apps](object_type) [public transportation]{"entity": "features", "value": "public transportation"}
    - authorize [apps](object_type) [event calendar]{"entity": "features", "value": "event calendar"}
    - authorize [apps](object_type) [maps navigation]{"entity": "features", "value": "maps navigation"}
    - authorize [apps](object_type) [map]{"entity": "features", "value": "map"}
    - authorize [apps](object_type) [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - authorize [apps](object_type) [offline search]{"entity": "features", "value": "offline search"}
    - authorize [apps](object_type) [ad free]{"entity": "features", "value": "ad free"}
    - authorize [apps](object_type) [privacy focused]{"entity": "features", "value": "privacy focused"}
    - authorize [apps](object_type) [bike]{"entity": "features", "value": "bike"}
    - authorize [apps](object_type) [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - authorize [apps](object_type) [share location]{"entity": "features", "value": "share location"}
    - authorize [apps](object_type) [material design]{"entity": "features", "value": "material design"}
    - Whichever has [offline navigation]{"entity": "features", "value": "offline navigation"}
    - Whichever has [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - Whichever has [bookmarks]{"entity": "features", "value": "bookmarks"}
    - Whichever has [no tracking]{"entity": "features", "value": "no tracking"}
    - Whichever has [works offline]{"entity": "features", "value": "works offline"}
    - Whichever has [lightweight]{"entity": "features", "value": "lightweight"}
    - Whichever has [customizable]{"entity": "features", "value": "customizable"}
    - Whichever has [walking navigation]{"entity": "features", "value": "walking navigation"}
    - Whichever has [driving directions]{"entity": "features", "value": "driving directions"}
    - Whichever has [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - Whichever has [calendar]{"entity": "features", "value": "calendar"}
    - Whichever has [real time traffic]{"entity": "features", "value": "real time traffic"}
    - Whichever has [track gps location]{"entity": "features", "value": "track gps location"}
    - Whichever has [events]{"entity": "features", "value": "events"}
    - Whichever has [support for webdav]{"entity": "features", "value": "support for webdav"}
    - Whichever has [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - Whichever has [record tracks]{"entity": "features", "value": "record tracks"}
    - Whichever has [route optimization]{"entity": "features", "value": "route optimization"}
    - Whichever has [open source projects]{"entity": "features", "value": "open source projects"}
    - Whichever has [map viewer]{"entity": "features", "value": "map viewer"}
    - Whichever has [text to speech]{"entity": "features", "value": "text to speech"}
    - Whichever has [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - Whichever has [nearby search]{"entity": "features", "value": "nearby search"}
    - Whichever has [calendar events]{"entity": "features", "value": "calendar events"}
    - Whichever has [notifications]{"entity": "features", "value": "notifications"}
    - Whichever has [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - Whichever has [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - Whichever has [osm based]{"entity": "features", "value": "osm based"}
    - Whichever has [cycling]{"entity": "features", "value": "cycling"}
    - Whichever has [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - Whichever has [hiking maps]{"entity": "features", "value": "hiking maps"}
    - Whichever has [user generated]{"entity": "features", "value": "user generated"}
    - Whichever has [route planning]{"entity": "features", "value": "route planning"}
    - Whichever has [mapping]{"entity": "features", "value": "mapping"}
    - Whichever has [reminder]{"entity": "features", "value": "reminder"}
    - Whichever has [voice navigation]{"entity": "features", "value": "voice navigation"}
    - Whichever has [gps navigation]{"entity": "features", "value": "gps navigation"}
    - Whichever has [offline routing]{"entity": "features", "value": "offline routing"}
    - Whichever has [route navigation]{"entity": "features", "value": "route navigation"}
    - Whichever has [location based]{"entity": "features", "value": "location based"}
    - Whichever has [hiking]{"entity": "features", "value": "hiking"}
    - Whichever has [built in calendar]{"entity": "features", "value": "built in calendar"}
    - Whichever has [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - Whichever has [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - Whichever has [biking maps]{"entity": "features", "value": "biking maps"}
    - Whichever has [find parking]{"entity": "features", "value": "find parking"}
    - Whichever has [public transportation]{"entity": "features", "value": "public transportation"}
    - Whichever has [event calendar]{"entity": "features", "value": "event calendar"}
    - Whichever has [maps navigation]{"entity": "features", "value": "maps navigation"}
    - Whichever has [map]{"entity": "features", "value": "map"}
    - Whichever has [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - Whichever has [offline search]{"entity": "features", "value": "offline search"}
    - Whichever has [ad free]{"entity": "features", "value": "ad free"}
    - Whichever has [privacy focused]{"entity": "features", "value": "privacy focused"}
    - Whichever has [bike]{"entity": "features", "value": "bike"}
    - Whichever has [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - Whichever has [share location]{"entity": "features", "value": "share location"}
    - Whichever has [material design]{"entity": "features", "value": "material design"}
    - The one with [offline navigation]{"entity": "features", "value": "offline navigation"}
    - The one with [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - The one with [bookmarks]{"entity": "features", "value": "bookmarks"}
    - The one with [no tracking]{"entity": "features", "value": "no tracking"}
    - The one with [works offline]{"entity": "features", "value": "works offline"}
    - The one with [lightweight]{"entity": "features", "value": "lightweight"}
    - The one with [customizable]{"entity": "features", "value": "customizable"}
    - The one with [walking navigation]{"entity": "features", "value": "walking navigation"}
    - The one with [driving directions]{"entity": "features", "value": "driving directions"}
    - The one with [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - The one with [calendar]{"entity": "features", "value": "calendar"}
    - The one with [real time traffic]{"entity": "features", "value": "real time traffic"}
    - The one with [track gps location]{"entity": "features", "value": "track gps location"}
    - The one with [events]{"entity": "features", "value": "events"}
    - The one with [support for webdav]{"entity": "features", "value": "support for webdav"}
    - The one with [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - The one with [record tracks]{"entity": "features", "value": "record tracks"}
    - The one with [route optimization]{"entity": "features", "value": "route optimization"}
    - The one with [open source projects]{"entity": "features", "value": "open source projects"}
    - The one with [map viewer]{"entity": "features", "value": "map viewer"}
    - The one with [text to speech]{"entity": "features", "value": "text to speech"}
    - The one with [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - The one with [nearby search]{"entity": "features", "value": "nearby search"}
    - The one with [calendar events]{"entity": "features", "value": "calendar events"}
    - The one with [notifications]{"entity": "features", "value": "notifications"}
    - The one with [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - The one with [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - The one with [osm based]{"entity": "features", "value": "osm based"}
    - The one with [cycling]{"entity": "features", "value": "cycling"}
    - The one with [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - The one with [hiking maps]{"entity": "features", "value": "hiking maps"}
    - The one with [user generated]{"entity": "features", "value": "user generated"}
    - The one with [route planning]{"entity": "features", "value": "route planning"}
    - The one with [mapping]{"entity": "features", "value": "mapping"}
    - The one with [reminder]{"entity": "features", "value": "reminder"}
    - The one with [voice navigation]{"entity": "features", "value": "voice navigation"}
    - The one with [gps navigation]{"entity": "features", "value": "gps navigation"}
    - The one with [offline routing]{"entity": "features", "value": "offline routing"}
    - The one with [route navigation]{"entity": "features", "value": "route navigation"}
    - The one with [location based]{"entity": "features", "value": "location based"}
    - The one with [hiking]{"entity": "features", "value": "hiking"}
    - The one with [built in calendar]{"entity": "features", "value": "built in calendar"}
    - The one with [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - The one with [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - The one with [biking maps]{"entity": "features", "value": "biking maps"}
    - The one with [find parking]{"entity": "features", "value": "find parking"}
    - The one with [public transportation]{"entity": "features", "value": "public transportation"}
    - The one with [event calendar]{"entity": "features", "value": "event calendar"}
    - The one with [maps navigation]{"entity": "features", "value": "maps navigation"}
    - The one with [map]{"entity": "features", "value": "map"}
    - The one with [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - The one with [offline search]{"entity": "features", "value": "offline search"}
    - The one with [ad free]{"entity": "features", "value": "ad free"}
    - The one with [privacy focused]{"entity": "features", "value": "privacy focused"}
    - The one with [bike]{"entity": "features", "value": "bike"}
    - The one with [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - The one with [share location]{"entity": "features", "value": "share location"}
    - The one with [material design]{"entity": "features", "value": "material design"}
    - with [offline navigation]{"entity": "features", "value": "offline navigation"}
    - with [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - with [bookmarks]{"entity": "features", "value": "bookmarks"}
    - with [no tracking]{"entity": "features", "value": "no tracking"}
    - with [works offline]{"entity": "features", "value": "works offline"}
    - with [lightweight]{"entity": "features", "value": "lightweight"}
    - with [customizable]{"entity": "features", "value": "customizable"}
    - with [walking navigation]{"entity": "features", "value": "walking navigation"}
    - with [driving directions]{"entity": "features", "value": "driving directions"}
    - with [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - with [calendar]{"entity": "features", "value": "calendar"}
    - with [real time traffic]{"entity": "features", "value": "real time traffic"}
    - with [track gps location]{"entity": "features", "value": "track gps location"}
    - with [events]{"entity": "features", "value": "events"}
    - with [support for webdav]{"entity": "features", "value": "support for webdav"}
    - with [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - with [record tracks]{"entity": "features", "value": "record tracks"}
    - with [route optimization]{"entity": "features", "value": "route optimization"}
    - with [open source projects]{"entity": "features", "value": "open source projects"}
    - with [map viewer]{"entity": "features", "value": "map viewer"}
    - with [text to speech]{"entity": "features", "value": "text to speech"}
    - with [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - with [nearby search]{"entity": "features", "value": "nearby search"}
    - with [calendar events]{"entity": "features", "value": "calendar events"}
    - with [notifications]{"entity": "features", "value": "notifications"}
    - with [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - with [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - with [osm based]{"entity": "features", "value": "osm based"}
    - with [cycling]{"entity": "features", "value": "cycling"}
    - with [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - with [hiking maps]{"entity": "features", "value": "hiking maps"}
    - with [user generated]{"entity": "features", "value": "user generated"}
    - with [route planning]{"entity": "features", "value": "route planning"}
    - with [mapping]{"entity": "features", "value": "mapping"}
    - with [reminder]{"entity": "features", "value": "reminder"}
    - with [voice navigation]{"entity": "features", "value": "voice navigation"}
    - with [gps navigation]{"entity": "features", "value": "gps navigation"}
    - with [offline routing]{"entity": "features", "value": "offline routing"}
    - with [route navigation]{"entity": "features", "value": "route navigation"}
    - with [location based]{"entity": "features", "value": "location based"}
    - with [hiking]{"entity": "features", "value": "hiking"}
    - with [built in calendar]{"entity": "features", "value": "built in calendar"}
    - with [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - with [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - with [biking maps]{"entity": "features", "value": "biking maps"}
    - with [find parking]{"entity": "features", "value": "find parking"}
    - with [public transportation]{"entity": "features", "value": "public transportation"}
    - with [event calendar]{"entity": "features", "value": "event calendar"}
    - with [maps navigation]{"entity": "features", "value": "maps navigation"}
    - with [map]{"entity": "features", "value": "map"}
    - with [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - with [offline search]{"entity": "features", "value": "offline search"}
    - with [ad free]{"entity": "features", "value": "ad free"}
    - with [privacy focused]{"entity": "features", "value": "privacy focused"}
    - with [bike]{"entity": "features", "value": "bike"}
    - with [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - with [share location]{"entity": "features", "value": "share location"}
    - with [material design]{"entity": "features", "value": "material design"}
    - Is there one with [offline navigation]{"entity": "features", "value": "offline navigation"}
    - Is there one with [maps navigation trips]{"entity": "features", "value": "maps navigation trips"}
    - Is there one with [bookmarks]{"entity": "features", "value": "bookmarks"}
    - Is there one with [no tracking]{"entity": "features", "value": "no tracking"}
    - Is there one with [works offline]{"entity": "features", "value": "works offline"}
    - Is there one with [lightweight]{"entity": "features", "value": "lightweight"}
    - Is there one with [customizable]{"entity": "features", "value": "customizable"}
    - Is there one with [walking navigation]{"entity": "features", "value": "walking navigation"}
    - Is there one with [driving directions]{"entity": "features", "value": "driving directions"}
    - Is there one with [apps with offline map]{"entity": "features", "value": "apps with offline map"}
    - Is there one with [calendar]{"entity": "features", "value": "calendar"}
    - Is there one with [real time traffic]{"entity": "features", "value": "real time traffic"}
    - Is there one with [track gps location]{"entity": "features", "value": "track gps location"}
    - Is there one with [events]{"entity": "features", "value": "events"}
    - Is there one with [support for webdav]{"entity": "features", "value": "support for webdav"}
    - Is there one with [turn by turn navigation]{"entity": "features", "value": "turn by turn navigation"}
    - Is there one with [record tracks]{"entity": "features", "value": "record tracks"}
    - Is there one with [route optimization]{"entity": "features", "value": "route optimization"}
    - Is there one with [open source projects]{"entity": "features", "value": "open source projects"}
    - Is there one with [map viewer]{"entity": "features", "value": "map viewer"}
    - Is there one with [text to speech]{"entity": "features", "value": "text to speech"}
    - Is there one with [night mode dark theme]{"entity": "features", "value": "night mode dark theme"}
    - Is there one with [nearby search]{"entity": "features", "value": "nearby search"}
    - Is there one with [calendar events]{"entity": "features", "value": "calendar events"}
    - Is there one with [notifications]{"entity": "features", "value": "notifications"}
    - Is there one with [exclude paths places from route]{"entity": "features", "value": "exclude paths places from route"}
    - Is there one with [points of interest poi]{"entity": "features", "value": "points of interest poi"}
    - Is there one with [osm based]{"entity": "features", "value": "osm based"}
    - Is there one with [cycling]{"entity": "features", "value": "cycling"}
    - Is there one with [wikipedia integration]{"entity": "features", "value": "wikipedia integration"}
    - Is there one with [hiking maps]{"entity": "features", "value": "hiking maps"}
    - Is there one with [user generated]{"entity": "features", "value": "user generated"}
    - Is there one with [route planning]{"entity": "features", "value": "route planning"}
    - Is there one with [mapping]{"entity": "features", "value": "mapping"}
    - Is there one with [reminder]{"entity": "features", "value": "reminder"}
    - Is there one with [voice navigation]{"entity": "features", "value": "voice navigation"}
    - Is there one with [gps navigation]{"entity": "features", "value": "gps navigation"}
    - Is there one with [offline routing]{"entity": "features", "value": "offline routing"}
    - Is there one with [route navigation]{"entity": "features", "value": "route navigation"}
    - Is there one with [location based]{"entity": "features", "value": "location based"}
    - Is there one with [hiking]{"entity": "features", "value": "hiking"}
    - Is there one with [built in calendar]{"entity": "features", "value": "built in calendar"}
    - Is there one with [based on openstreetmap]{"entity": "features", "value": "based on openstreetmap"}
    - Is there one with [gps location tracking]{"entity": "features", "value": "gps location tracking"}
    - Is there one with [biking maps]{"entity": "features", "value": "biking maps"}
    - Is there one with [find parking]{"entity": "features", "value": "find parking"}
    - Is there one with [public transportation]{"entity": "features", "value": "public transportation"}
    - Is there one with [event calendar]{"entity": "features", "value": "event calendar"}
    - Is there one with [maps navigation]{"entity": "features", "value": "maps navigation"}
    - Is there one with [map]{"entity": "features", "value": "map"}
    - Is there one with [natural landscape and forest pathways]{"entity": "features", "value": "natural landscape and forest pathways"}
    - Is there one with [offline search]{"entity": "features", "value": "offline search"}
    - Is there one with [ad free]{"entity": "features", "value": "ad free"}
    - Is there one with [privacy focused]{"entity": "features", "value": "privacy focused"}
    - Is there one with [bike]{"entity": "features", "value": "bike"}
    - Is there one with [gps with voice navigation]{"entity": "features", "value": "gps with voice navigation"}
    - Is there one with [share location]{"entity": "features", "value": "share location"}
    - Is there one with [material design]{"entity": "features", "value": "material design"}
    - I want to launch [OsmAnd]{"entity": "name", "value": "OsmAnd"}
    - I want to launch [Etar]{"entity": "name", "value": "Etar"}
    - I want to launch [Simple Calendar]{"entity": "name", "value": "Simple Calendar"}
    - I want to launch [Organic Maps]{"entity": "name", "value": "Organic Maps"}
    - Launch [OsmAnd]{"entity": "name", "value": "OsmAnd"}
    - Launch [Etar]{"entity": "name", "value": "Etar"}
    - Launch [Simple Calendar]{"entity": "name", "value": "Simple Calendar"}
    - Launch [Organic Maps]{"entity": "name", "value": "Organic Maps"}
    - Open [OsmAnd]{"entity": "name", "value": "OsmAnd"}
    - Open [Etar]{"entity": "name", "value": "Etar"}
    - Open [Simple Calendar]{"entity": "name", "value": "Simple Calendar"}
    - Open [Organic Maps]{"entity": "name", "value": "Organic Maps"}
    - Please open [OsmAnd]{"entity": "name", "value": "OsmAnd"}
    - Please open [Etar]{"entity": "name", "value": "Etar"}
    - Please open [Simple Calendar]{"entity": "name", "value": "Simple Calendar"}
    - Please open [Organic Maps]{"entity": "name", "value": "Organic Maps"}
    - Please launch [OsmAnd]{"entity": "name", "value": "OsmAnd"}
    - Please launch [Etar]{"entity": "name", "value": "Etar"}
    - Please launch [Simple Calendar]{"entity": "name", "value": "Simple Calendar"}
    - Please launch [Organic Maps]{"entity": "name", "value": "Organic Maps"}
    - the [first]{"entity": "mention", "value": "1"} one
    - The [second]{"entity": "mention", "value": "2"} one
    - The [ninth]{"entity": "mention", "value": "9"} one
    - number [1](mention)
    - number [2](mention)
    - the [last]{"entity": "mention", "value": "LAST"} one
    - [any]{"entity": "mention", "value": "ANY"} of them will do

- synonym: maps navigation trips
  examples: |
    - maps
    - navigation
    - trips

- synonym: apps with offline map
  examples: |
    - apps with
    - with offline
    - offline map
    - apps
    - offline
    - map

- synonym: real time traffic
  examples: |
    - real
    - time
    - traffic

- synonym: track gps location
  examples: |
    - track
    - gps
    - location

- synonym: support for webdav
  examples: |
    - support
    - webdav

- synonym: turn by turn navigation
  examples: |
    - turn by
    - by turn
    - turn navigation
    - turn
    - turn

- synonym: open source projects
  examples: |
    - open
    - source
    - projects

- synonym: text to speech
  examples: |
    - text
    - speech

- synonym: night mode dark theme
  examples: |
    - night mode
    - mode dark
    - dark theme
    - night
    - mode
    - dark
    - theme

- synonym: exclude paths places from route
  examples: |
    - exclude paths places
    - paths places from
    - places from route
    - exclude paths
    - paths places
    - places from
    - from route
    - exclude
    - paths
    - places
    - route

- synonym: points of interest poi
  examples: |
    - points of
    - of interest
    - interest poi
    - points
    - interest
    - poi

- synonym: built in calendar
  examples: |
    - built
    - calendar

- synonym: based on openstreetmap
  examples: |
    - based
    - openstreetmap

- synonym: gps location tracking
  examples: |
    - location
    - tracking

- synonym: natural landscape and forest pathways
  examples: |
    - natural landscape and
    - landscape and forest
    - and forest pathways
    - natural landscape
    - landscape and
    - and forest
    - forest pathways
    - natural
    - landscape
    - forest
    - pathways

- synonym: gps with voice navigation
  examples: |
    - gps with
    - with voice
    - voice navigation
    - with
    - voice

- intent: out_of_scope
  examples: |
    - adsfg
    - I want to order good
    - What is 2+2?
    - Who's the US President?)
